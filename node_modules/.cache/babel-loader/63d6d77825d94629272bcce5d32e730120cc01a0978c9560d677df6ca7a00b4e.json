{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\questions\\\\src\\\\components\\\\Addition\\\\LevelSection.js\";\nimport React from 'react';\nimport experienceData from '../../data/experiences.json'; // Pastikan pathnya sesuai dengan lokasi experiences.json\n\n// Fungsi untuk menghitung level berdasarkan experience (exp)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLevelFromExp = exp => {\n  // Mengiterasi data experience untuk mencari level yang sesuai berdasarkan exp\n  for (let i = 0; i < experienceData.length; i++) {\n    // Jika exp lebih kecil dari nilai experience pada index saat ini\n    if (exp < experienceData[i].experience) {\n      // Kembalikan level pada data sebelumnya (jika ada), atau level 1 jika ini adalah level pertama\n      return experienceData[i - 1] ? experienceData[i - 1].level : 1;\n    }\n  }\n  // Jika exp lebih besar atau sama dengan pengalaman terakhir, maka return level tertinggi yang ada\n  return experienceData[experienceData.length - 1].level;\n};\nconst LevelSection = ({\n  level,\n  exp\n}) => {\n  // Mendapatkan level berdasarkan exp pemain menggunakan fungsi getLevelFromExp\n  const playerLevel = getLevelFromExp(exp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: [\"Level Pemain: \", playerLevel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg\",\n      children: [\"Exp Pemain: \", exp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-200 rounded-full h-2.5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-green-500 h-2.5 rounded-full\",\n          style: {\n            width: `${exp / experienceData[experienceData.length - 1].experience * 100}%` // Progress hingga max exp\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = LevelSection;\nexport default LevelSection;\nvar _c;\n$RefreshReg$(_c, \"LevelSection\");","map":{"version":3,"names":["React","experienceData","jsxDEV","_jsxDEV","getLevelFromExp","exp","i","length","experience","level","LevelSection","playerLevel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["E:/project/questions/src/components/Addition/LevelSection.js"],"sourcesContent":["import React from 'react';\r\nimport experienceData from '../../data/experiences.json'; // Pastikan pathnya sesuai dengan lokasi experiences.json\r\n\r\n// Fungsi untuk menghitung level berdasarkan experience (exp)\r\nconst getLevelFromExp = (exp) => {\r\n  // Mengiterasi data experience untuk mencari level yang sesuai berdasarkan exp\r\n  for (let i = 0; i < experienceData.length; i++) {\r\n    // Jika exp lebih kecil dari nilai experience pada index saat ini\r\n    if (exp < experienceData[i].experience) {\r\n      // Kembalikan level pada data sebelumnya (jika ada), atau level 1 jika ini adalah level pertama\r\n      return experienceData[i - 1] ? experienceData[i - 1].level : 1;\r\n    }\r\n  }\r\n  // Jika exp lebih besar atau sama dengan pengalaman terakhir, maka return level tertinggi yang ada\r\n  return experienceData[experienceData.length - 1].level;\r\n};\r\n\r\nconst LevelSection = ({ level, exp }) => {\r\n  // Mendapatkan level berdasarkan exp pemain menggunakan fungsi getLevelFromExp\r\n  const playerLevel = getLevelFromExp(exp);\r\n\r\n  return (\r\n    <div className=\"mt-4 text-center\">\r\n      <h2 className=\"text-xl font-semibold\">Level Pemain: {playerLevel}</h2>\r\n      <h3 className=\"text-lg\">Exp Pemain: {exp}</h3>\r\n      {/* Progress Bar untuk Level Pemain */}\r\n      <div className=\"mt-2\">\r\n        <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n          <div\r\n            className=\"bg-green-500 h-2.5 rounded-full\"\r\n            style={{\r\n              width: `${(exp / experienceData[experienceData.length - 1].experience) * 100}%`, // Progress hingga max exp\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelSection;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,6BAA6B,CAAC,CAAC;;AAE1D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAIC,GAAG,IAAK;EAC/B;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,cAAc,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IAC9C;IACA,IAAID,GAAG,GAAGJ,cAAc,CAACK,CAAC,CAAC,CAACE,UAAU,EAAE;MACtC;MACA,OAAOP,cAAc,CAACK,CAAC,GAAG,CAAC,CAAC,GAAGL,cAAc,CAACK,CAAC,GAAG,CAAC,CAAC,CAACG,KAAK,GAAG,CAAC;IAChE;EACF;EACA;EACA,OAAOR,cAAc,CAACA,cAAc,CAACM,MAAM,GAAG,CAAC,CAAC,CAACE,KAAK;AACxD,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAED,KAAK;EAAEJ;AAAI,CAAC,KAAK;EACvC;EACA,MAAMM,WAAW,GAAGP,eAAe,CAACC,GAAG,CAAC;EAExC,oBACEF,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BV,OAAA;MAAIS,SAAS,EAAC,uBAAuB;MAAAC,QAAA,GAAC,gBAAc,EAACF,WAAW;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtEd,OAAA;MAAIS,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAC,cAAY,EAACR,GAAG;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE9Cd,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBV,OAAA;QAAKS,SAAS,EAAC,uCAAuC;QAAAC,QAAA,eACpDV,OAAA;UACES,SAAS,EAAC,iCAAiC;UAC3CM,KAAK,EAAE;YACLC,KAAK,EAAE,GAAId,GAAG,GAAGJ,cAAc,CAACA,cAAc,CAACM,MAAM,GAAG,CAAC,CAAC,CAACC,UAAU,GAAI,GAAG,GAAG,CAAE;UACnF;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GArBIV,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
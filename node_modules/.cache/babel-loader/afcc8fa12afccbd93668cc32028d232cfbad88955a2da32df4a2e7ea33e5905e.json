{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\questions\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport experienceData from './data/experiences.json';\nimport LevelSection from './LevelSection';\n\n// Fungsi untuk menghitung level berdasarkan experience (exp)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLevelFromExp = exp => {\n  for (let i = 0; i < experienceData.length; i++) {\n    if (exp < experienceData[i].experience) {\n      return experienceData[i - 1] ? experienceData[i - 1].level : 1;\n    }\n  }\n  return experienceData[experienceData.length - 1].level;\n};\nconst PlayerInfo = () => {\n  _s();\n  const [playerData, setPlayerData] = useState({\n    exp: 0,\n    // Nilai awal experience\n    level: 1 // Level awal\n  });\n  useEffect(() => {\n    // Set level berdasarkan exp setiap kali exp berubah\n    const newLevel = getLevelFromExp(playerData.exp);\n    if (newLevel !== playerData.level) {\n      setPlayerData(prevData => ({\n        ...prevData,\n        level: newLevel\n      }));\n    }\n  }, [playerData.exp]);\n  const handleExpChange = event => {\n    const newExp = Number(event.target.value);\n    setPlayerData(prevData => ({\n      ...prevData,\n      exp: newExp\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-center\",\n      children: \"Player Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: playerData.exp,\n      onChange: handleExpChange,\n      className: \"mt-4 p-2 border border-gray-300 rounded-md\",\n      placeholder: \"Masukkan experience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LevelSection, {\n      level: playerData.level,\n      exp: playerData.exp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerInfo, \"t1YbYw5jEd62VrYnx47TxX33MjY=\");\n_c = PlayerInfo;\nexport default PlayerInfo;\nvar _c;\n$RefreshReg$(_c, \"PlayerInfo\");","map":{"version":3,"names":["React","useState","useEffect","experienceData","LevelSection","jsxDEV","_jsxDEV","getLevelFromExp","exp","i","length","experience","level","PlayerInfo","_s","playerData","setPlayerData","newLevel","prevData","handleExpChange","event","newExp","Number","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["E:/project/questions/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport experienceData from './data/experiences.json'; \nimport LevelSection from './LevelSection';\n\n// Fungsi untuk menghitung level berdasarkan experience (exp)\nconst getLevelFromExp = (exp) => {\n  for (let i = 0; i < experienceData.length; i++) {\n    if (exp < experienceData[i].experience) {\n      return experienceData[i - 1] ? experienceData[i - 1].level : 1;\n    }\n  }\n  return experienceData[experienceData.length - 1].level;\n};\n\nconst PlayerInfo = () => {\n  const [playerData, setPlayerData] = useState({\n    exp: 0,   // Nilai awal experience\n    level: 1, // Level awal\n  });\n\n  useEffect(() => {\n    // Set level berdasarkan exp setiap kali exp berubah\n    const newLevel = getLevelFromExp(playerData.exp);\n    if (newLevel !== playerData.level) {\n      setPlayerData((prevData) => ({\n        ...prevData,\n        level: newLevel,\n      }));\n    }\n  }, [playerData.exp]);\n\n  const handleExpChange = (event) => {\n    const newExp = Number(event.target.value);\n    setPlayerData((prevData) => ({\n      ...prevData,\n      exp: newExp,\n    }));\n  };\n\n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold text-center\">Player Info</h1>\n      {/* Input untuk mengubah exp */}\n      <input\n        type=\"number\"\n        value={playerData.exp}\n        onChange={handleExpChange}\n        className=\"mt-4 p-2 border border-gray-300 rounded-md\"\n        placeholder=\"Masukkan experience\"\n      />\n\n      {/* Tampilkan LevelSection dengan props level dan exp */}\n      <LevelSection level={playerData.level} exp={playerData.exp} />\n    </div>\n  );\n};\n\nexport default PlayerInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,YAAY,MAAM,gBAAgB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAIC,GAAG,IAAK;EAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,cAAc,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IAC9C,IAAID,GAAG,GAAGL,cAAc,CAACM,CAAC,CAAC,CAACE,UAAU,EAAE;MACtC,OAAOR,cAAc,CAACM,CAAC,GAAG,CAAC,CAAC,GAAGN,cAAc,CAACM,CAAC,GAAG,CAAC,CAAC,CAACG,KAAK,GAAG,CAAC;IAChE;EACF;EACA,OAAOT,cAAc,CAACA,cAAc,CAACO,MAAM,GAAG,CAAC,CAAC,CAACE,KAAK;AACxD,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC;IAC3CO,GAAG,EAAE,CAAC;IAAI;IACVI,KAAK,EAAE,CAAC,CAAE;EACZ,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,QAAQ,GAAGV,eAAe,CAACQ,UAAU,CAACP,GAAG,CAAC;IAChD,IAAIS,QAAQ,KAAKF,UAAU,CAACH,KAAK,EAAE;MACjCI,aAAa,CAAEE,QAAQ,KAAM;QAC3B,GAAGA,QAAQ;QACXN,KAAK,EAAEK;MACT,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACF,UAAU,CAACP,GAAG,CAAC,CAAC;EAEpB,MAAMW,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,MAAM,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IACzCR,aAAa,CAAEE,QAAQ,KAAM;MAC3B,GAAGA,QAAQ;MACXV,GAAG,EAAEa;IACP,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEf,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAIoB,SAAS,EAAC,gCAAgC;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE/DxB,OAAA;MACEyB,IAAI,EAAC,QAAQ;MACbP,KAAK,EAAET,UAAU,CAACP,GAAI;MACtBwB,QAAQ,EAAEb,eAAgB;MAC1BO,SAAS,EAAC,4CAA4C;MACtDO,WAAW,EAAC;IAAqB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAGFxB,OAAA,CAACF,YAAY;MAACQ,KAAK,EAAEG,UAAU,CAACH,KAAM;MAACJ,GAAG,EAAEO,UAAU,CAACP;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzCID,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AA2ChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}